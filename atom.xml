<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张同学</title>
  
  <subtitle>记录代码  |  记录生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linjiaxiaozhang.com/"/>
  <updated>2019-06-02T06:58:41.224Z</updated>
  <id>http://linjiaxiaozhang.com/</id>
  
  <author>
    <name>Jiaxin Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>.NET中委托与lambda表达式的使用</title>
    <link href="http://linjiaxiaozhang.com/2019/06/01/NET%E4%B8%AD%E5%A7%94%E6%89%98%E4%B8%8Elambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://linjiaxiaozhang.com/2019/06/01/NET中委托与lambda表达式的使用/</id>
    <published>2019-06-01T11:25:32.000Z</published>
    <updated>2019-06-02T06:58:41.224Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/文章摘要图/chahua3.jpg"><br><a id="more"></a></p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=496869422&auto=0&height=66"></iframe></p><hr><h2 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h2><p>是一种数据类型，是用来存放方法的。</p><h3 id="为什么要使用委托？"><a href="#为什么要使用委托？" class="headerlink" title="为什么要使用委托？"></a>为什么要使用委托？</h3><p>例：现在运用控制台输出list数据中年龄大于或小于21的姓名，下面为一般写法。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Program</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"> public <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">        </span>&#123;</span><br><span class="line">            public string Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            public int Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">static void Main(string[] args)</span><br><span class="line">        &#123;<span class="comment">//创建数据对象</span></span><br><span class="line">            List&lt;Person&gt; list = <span class="keyword">new</span> List&lt;Person&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"张三"</span>,Age=<span class="number">20</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"李四"</span>,Age=<span class="number">21</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"小明"</span>,Age=<span class="number">22</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"小红"</span>,Age=<span class="number">23</span>&#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">            List&lt;Person&gt; person = FilterByAge(list,<span class="literal">true</span>,<span class="number">21</span>);</span><br><span class="line">            foreach (<span class="keyword">var</span> item <span class="keyword">in</span> person)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(item.Name);<span class="comment">//输出</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">            Filter(list, p =&gt; p.Name.Contains(<span class="string">"a"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">static</span> List&lt;Person&gt; FilterByAge(List&lt;Person&gt; list,bool opreate,int age)<span class="comment">//具体方法实现</span></span><br><span class="line">        &#123;</span><br><span class="line">        List&lt;Person&gt; newList=<span class="keyword">new</span> List&lt;Person&gt;();</span><br><span class="line">        foreach(<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(opreate)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(item.Age&gt;age)</span><br><span class="line">        &#123;</span><br><span class="line">        newList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(item.Age&lt;age)</span><br><span class="line">        &#123;</span><br><span class="line">        newList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newList;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>由此可见，上面的方法判断较多且代码可读性较差，下面我们来运用委托实现。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Program</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">public delegate bool FilterPerson(Person p);<span class="comment">//新建一个委托，相当于定义了一个方法的模板</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">        </span>&#123;</span><br><span class="line">            public string Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            public int Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">stattic bool FilterByAge(Person p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.Age&gt;<span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.Age&gt;<span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> Main(string[] args)</span><br><span class="line">        &#123;<span class="comment">//创建数据对象</span></span><br><span class="line">            List&lt;Person&gt; list = <span class="keyword">new</span> List&lt;Person&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"张三"</span>,Age=<span class="number">20</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"李四"</span>,Age=<span class="number">21</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"小明"</span>,Age=<span class="number">22</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"小红"</span>,Age=<span class="number">23</span>&#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">            FilterPerson filter=<span class="keyword">new</span> FilterPerson(FilterByAge);</span><br><span class="line">            List&lt;Person&gt; person=Filter(list,filter);</span><br><span class="line">            foreach (<span class="keyword">var</span> item <span class="keyword">in</span> person)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(item.Name);<span class="comment">//输出</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">static</span> List&lt;Person&gt; Filter(List&lt;Person&gt; list,FilterPerson fliter)<span class="comment">//具体方法实现</span></span><br><span class="line">        &#123;</span><br><span class="line">        List&lt;Person&gt; newList=<span class="keyword">new</span> List&lt;Person&gt;();</span><br><span class="line">        foreach(<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(filiter(item))</span><br><span class="line">        &#123;</span><br><span class="line">        newList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newList;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面的代码的写法还是能够继续简化，下面我们用到了lambda表达式来简化代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Program</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        public delegate bool FilterPerson(Person p);</span><br><span class="line">         public <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">        </span>&#123;</span><br><span class="line">            public string Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            public int Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;Person&gt; list = <span class="keyword">new</span> List&lt;Person&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"张三"</span>,Age=<span class="number">20</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"李四"</span>,Age=<span class="number">21</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"小明"</span>,Age=<span class="number">22</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person()&#123; Name=<span class="string">"小红"</span>,Age=<span class="number">23</span>&#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">            List&lt;Person&gt; person= Filter(list, p =&gt; p.Age&gt;<span class="number">21</span>);<span class="comment">//lambda 语法,格式："()=&gt;&#123;&#125;"</span></span><br><span class="line">            foreach (<span class="keyword">var</span> item <span class="keyword">in</span> person)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(item.Name);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">static</span> List&lt;Person&gt; Filter(List&lt;Person&gt; list,FilterPerson filter)</span><br><span class="line">        &#123;</span><br><span class="line">            List&lt;Person&gt; newList = <span class="keyword">new</span> List&lt;Person&gt;();</span><br><span class="line">            foreach (<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (filter(item))</span><br><span class="line">                &#123;</span><br><span class="line">                    newList.Add(item);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> newList;</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>lambda 语法：用来简化声明方法，多个参数时用逗号隔开，当只有一个参数时，大括号可以省略掉，方法体只有一行代码，叫lambda 表达式，大括号可以省略掉，自动将表达式的结果返回。</p><h2 id="泛型委托"><a href="#泛型委托" class="headerlink" title="泛型委托"></a>泛型委托</h2><p>随着业务需求的增多，数据类型也会变得更加多样化，那将意味着需要定义多个委托，这就又造成了代码的重复，这时候我们便用到了泛型委托。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate T AddDelegate&lt;T&gt;(T a,T b);</span><br></pre></td></tr></table></figure></p><p>但是系统早已为我们准备好了三种类型的委托：<br>（1）Action（）没有参数，没有返回值。<br>（2）Action&lt;&gt;,最多传16个参数，没有返回值。<br>（3）Func&lt;&gt;,最后一个类型是返回类型，其余都是输入类型。<br>所以说委托一般是不需要我们定义的，系统所提供的三种委托基本可以适应大多数使用场景。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/文章摘要图/chahua3.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term=".NET基础" scheme="http://linjiaxiaozhang.com/categories/NET%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="学习" scheme="http://linjiaxiaozhang.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="基础" scheme="http://linjiaxiaozhang.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>.NET总结（常见误区）</title>
    <link href="http://linjiaxiaozhang.com/2019/06/01/NET%E6%80%BB%E7%BB%93%EF%BC%88%E5%B8%B8%E8%A7%81%E8%AF%AF%E5%8C%BA%EF%BC%89/"/>
    <id>http://linjiaxiaozhang.com/2019/06/01/NET总结（常见误区）/</id>
    <published>2019-06-01T11:18:04.000Z</published>
    <updated>2019-06-06T01:30:35.166Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/文章摘要图/chahua2.jpg"><br><a id="more"></a></p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=540042&auto=0&height=66"></iframe></p><hr><h2 id="内存分配模式"><a href="#内存分配模式" class="headerlink" title="内存分配模式"></a>内存分配模式</h2><p>主要分为两种，栈和堆。<br><strong>黄金定律</strong>：引用类型一定分配在堆上，值类型的局部变量存储在栈上，而类的值类型成员存储在堆上。</p><h2 id="思考一"><a href="#思考一" class="headerlink" title="思考一"></a>思考一</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int a=<span class="number">10</span>;</span><br><span class="line">int b=a;</span><br><span class="line">b=<span class="number">20</span>;</span><br><span class="line">a=?;</span><br></pre></td></tr></table></figure><p>很显然，执行完这段代码后a的值并没有被改变，a的值还是10.<br><img src="https://img-blog.csdnimg.cn/20190528185723962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNDg3NzM4,size_14,color_FFFFFF,t_70" alt="示例图"></p><h2 id="思考二"><a href="#思考二" class="headerlink" title="思考二"></a>思考二</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">public string Name &#123;<span class="keyword">get</span>;<span class="keyword">set</span>;&#125;</span><br><span class="line">public int Age&#123;<span class="keyword">get</span>;<span class="keyword">set</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">Person p=new Person();</span><br><span class="line">p.Name="张三";</span><br><span class="line">p.Age=20;</span><br><span class="line"></span><br><span class="line">Person p1=p;</span><br><span class="line">p1.Name="李四";</span><br><span class="line">p1.Age=21;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(p.Name);</span><br><span class="line">Console.WriteLine(p.Age);</span><br><span class="line">Console.ReadLine();</span><br></pre></td></tr></table></figure><p>这回的输出结果变为了<strong>李四</strong>与<strong>21</strong>。<img src="https://img-blog.csdnimg.cn/20190528192932882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNDg3NzM4,size_16,color_FFFFFF,t_70" alt="示例图"><br>由于Person p1在栈内直接获取了Person p的堆地址，而不是数据，所以在修改Person p1内的数据时，便会根据地址修改堆内的相应数据，从而修改了Person p的数据，所以输出结果会变为变为李四与21。</p><h2 id="未将对象引用到实例"><a href="#未将对象引用到实例" class="headerlink" title="未将对象引用到实例"></a>未将对象引用到实例<img src="https://img-blog.csdnimg.cn/20190528193818442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNDg3NzM4,size_16,color_FFFFFF,t_70" alt="示例图"></h2><p>当栈内A地址为NULL时，便会引发未将对象引用到实例的错误。</p><h2 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h2><p>值类型（int，double，bool等）占用的空间在方法执行结束会被马上释放，引用类型（string，数组，class等）占用的空间在方法执行结束后不会被马上释放，具体什么时间释放由垃圾回收器（GC）来决定。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/文章摘要图/chahua2.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term=".NET基础" scheme="http://linjiaxiaozhang.com/categories/NET%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="学习" scheme="http://linjiaxiaozhang.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="基础" scheme="http://linjiaxiaozhang.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Vue学习笔记</title>
    <link href="http://linjiaxiaozhang.com/2019/06/01/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://linjiaxiaozhang.com/2019/06/01/Vue学习笔记/</id>
    <published>2019-06-01T11:18:04.000Z</published>
    <updated>2019-06-06T01:24:42.116Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/文章摘要图/chahua4.jpg"><br><a id="more"></a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>安装<code>node.js</code></li><li>安装 <code>cnpm：npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li><li>安装vue 的命令行工具：<code>npm install --global vue-cli</code></li><li>创建项目：<code>vue init webpack-simple v1</code></li><li>用vscode打开项目，打开命令窗口</li><li>安装项目依赖项：<code>cnpm install</code></li><li>运行项目：<code>npm run dev</code><h1 id="数据绑定、渲染"><a href="#数据绑定、渲染" class="headerlink" title="数据绑定、渲染"></a>数据绑定、渲染</h1><h2 id="（1）所有的内容要被一个根节点包起来。"><a href="#（1）所有的内容要被一个根节点包起来。" class="headerlink" title="（1）所有的内容要被一个根节点包起来。"></a>（1）所有的内容要被一个根节点包起来。</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="（2）data中定义数据（变量）"><a href="#（2）data中定义数据（变量）" class="headerlink" title="（2）data中定义数据（变量）"></a>（2）data中定义数据（变量）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">         list: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="（3）渲染单个变量、数组和数据的绑定"><a href="#（3）渲染单个变量、数组和数据的绑定" class="headerlink" title="（3）渲染单个变量、数组和数据的绑定"></a>（3）渲染单个变量、数组和数据的绑定</h2><ol><li>绑定属性<code>v-bind:属性名=&quot;变量名&quot;</code>，v-bind可以省略掉。</li><li>双向数据绑定属性<code>v-model</code>配合input控件使用。</li><li>绑定时间<code>v-on:click</code>可以简写成<code>@click</code>.</li><li><code>$event:</code>事件对象可以获取键盘的属性<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123;name&#125;&#125;&lt;<span class="regexp">/div&gt;/</span><span class="regexp">/用两个大括号包起来渲染单个变量</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li v-for="(item,index) in list" :key="index"&gt;/</span><span class="regexp">/运用v-for方法来渲染数组</span></span><br><span class="line"><span class="regexp">          &#123;&#123;item&#125;&#125;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">      &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">    props: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">    data() &#123;</span></span><br><span class="line"><span class="regexp">        return &#123;</span></span><br><span class="line"><span class="regexp">name='xxx'</span></span><br><span class="line"><span class="regexp">list=['张三','李四']</span></span><br><span class="line"><span class="regexp">        &#125;;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    methods: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">    components: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">    mounted() &#123;&#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;style scoped lang=<span class="string">"scss"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="4-localstorage本地存储实例"><a href="#4-localstorage本地存储实例" class="headerlink" title="(4) localstorage本地存储实例"></a>(4) localstorage本地存储实例</h2><p>js文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> storage = &#123;</span><br><span class="line">    <span class="keyword">set</span>(key, value) &#123;</span><br><span class="line">        localStorage.setItem(key, <span class="built_in">JSON</span>.stringify(value))<span class="comment">//根据key值添加数据</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">get</span>(key) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(localStorage.getItem(key))<span class="comment">//根据key值获取数据</span></span><br><span class="line">    &#125;,</span><br><span class="line">    del(key) &#123;</span><br><span class="line">        localStorage.removeItem(key)<span class="comment">//根据key值删除数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; storage &#125;</span><br></pre></td></tr></table></figure></p><p>vue文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;未完成列表&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;input type="text" v-model="name" @keyup="addName($event)"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">      &lt;li v-for="(item,index) in nameList" :key="index" v-if="!item.done"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input type="checkbox" v-model="item.done" @change="doneTask()"&gt;</span></span><br><span class="line"><span class="regexp">        &#123;&#123;item.name&#125;&#125;</span></span><br><span class="line"><span class="regexp">        &lt;button @click="deleteName(index)"&gt;删除&lt;/</span>button&gt;</span><br><span class="line">      &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">    &lt;div&gt;已完成列表&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">      &lt;li v-for="(item,index) in nameList" :key="index" v-if="item.done"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input type="checkbox" v-model="item.done" @change="doneTask()"&gt;</span></span><br><span class="line"><span class="regexp">        &#123;&#123;item.name&#125;&#125;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import &#123; storage &#125; from "./</span>common/storage<span class="string">";</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      name: "</span><span class="string">",</span></span><br><span class="line"><span class="string">      nameList: []</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;</span></span><br><span class="line"><span class="string">    addName(e) &#123;</span></span><br><span class="line"><span class="string">      if (e.keyCode == "</span><span class="number">13</span><span class="string">") &#123;</span></span><br><span class="line"><span class="string">        this.nameList.push(&#123; name: this.name, done: false &#125;);</span></span><br><span class="line"><span class="string">        storage.set("</span>nameList<span class="string">", this.nameList);</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    deleteName(index) &#123;</span></span><br><span class="line"><span class="string">      this.nameList.splice(index, 1);</span></span><br><span class="line"><span class="string">      storage.set("</span>nameList<span class="string">", this.nameList);</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    doneTask() &#123;</span></span><br><span class="line"><span class="string">      storage.set("</span>nameList<span class="string">", this.nameList);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  mounted() &#123;</span></span><br><span class="line"><span class="string">    if (storage.get("</span>nameList<span class="string">") != null) &#123;</span></span><br><span class="line"><span class="string">      this.nameList = storage.get("</span>nameList<span class="string">");</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><ol><li>作用：封装成可重用的代码，相同的功能封装成组件。App.vue是根组件，一般不对跟组件做操作。</li><li>一个vue页面是由各种组件构成的，组件之间呈树状结构，又称组件树，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20190605170409499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNDg3NzM4,size_16,color_FFFFFF,t_70" alt="图片"></li><li>组件三要素：模板、脚本（业务逻辑）、样式。</li><li>组件的三步走：引用（import），注册（compoments），使用。</li><li>组件声明周期函数，当组件挂载、更新、销毁时触发的函数。<br>参考：<code>https://cn.vuejs.org/v2/guide/instance.html</code><h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1>作用：动态挂载组件。参考官网：<code>https://router.vuejs.org/zh/</code></li><li>安装 <code>cnpm install vue-router --save</code></li><li><p>在<code>main.js·文件中引入并使用</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure></li><li><p>定义路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes=&#123;</span><br><span class="line">&#123;<span class="attr">path</span>:<span class="string">'/foo'</span>,<span class="attr">component</span>:Foo&#125;,</span><br><span class="line">&#123;<span class="attr">path</span>:<span class="string">'/bar'</span>,<span class="attr">component</span>:Bar&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建<code>router</code>实例，然后给<code>roytes</code>配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建和挂载根实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h1 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h1><ol><li><code>npm install axios --save</code></li><li>使用axios请求数据，参考：<code>https://github.com/axios/axios</code>,哪里使用哪里引用。<h1 id="动态传值"><a href="#动态传值" class="headerlink" title="动态传值"></a>动态传值</h1>两种传值方式：<br>（1）url传参：直接在地址后加？，通过<code>this.$route.query</code>获取。<br>（2）路由传参：修改路由，例如：<code>xxx/id</code>,通过<code>this.$route.params</code>获取。<br>两种跳转方式：<br>（1）标签跳转：<code>&lt;router-link :to=&quot;&#39;/home/major?collegeId=&#39;+item.id&quot;&gt;&lt;/router-link&gt;</code><br>（2）js跳转：<code>this.$router.push(`</code>/home/major?collegeId=${id}<code></code>)`<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2>router.js文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'../compomons/Home'</span></span><br><span class="line"><span class="keyword">import</span> College <span class="keyword">from</span> <span class="string">'../compomons/College'</span></span><br><span class="line"><span class="keyword">import</span> Major <span class="keyword">from</span> <span class="string">'../compomons/Major'</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    redirect: <span class="string">'/home/college'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/home'</span>,</span><br><span class="line">    component: Home,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'college'</span>,</span><br><span class="line">        component: College,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'major'</span>,</span><br><span class="line">        component: Major,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> &#123;router&#125;</span><br></pre></td></tr></table></figure></li></ol><p>Colloge.vue<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;学校列表&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li v-for="(item,index) in list" :key="index"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;router-link :to="'/</span>home/major?collegeId=<span class="string">'+item.id"&gt;&#123;&#123;item.name&#125;&#125;&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">          &lt;button @click="toMajor(item.id)"&gt;&#123;&#123;item.name&#125;&#125;&lt;/button&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">      &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/template&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">import axios from "axios";</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  props: &#123;&#125;,</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      list: []</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;</span></span><br><span class="line"><span class="string">    toMajor(id)&#123;</span></span><br><span class="line"><span class="string">      this.$router.push(`/home/major?collegeId=$&#123;id&#125;`)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  components: &#123;&#125;,</span></span><br><span class="line"><span class="string">  mounted() &#123;</span></span><br><span class="line"><span class="string">    const url = "http://39.98.205.17:9000/api-task/college/findAll";</span></span><br><span class="line"><span class="string">    axios.get(url).then((response) =&gt; &#123;</span></span><br><span class="line"><span class="string">      this.list = response.data.data</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style scoped lang="scss"&gt;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure></p><p>Header.vue<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"head"</span>&gt;</span><br><span class="line">        学生后台管理系统</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props: &#123;&#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">    components: &#123;&#125;,</span><br><span class="line">    mounted() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style scoped lang="scss"&gt;</span></span><br><span class="line"><span class="regexp">.head&#123;</span></span><br><span class="line"><span class="regexp">    background-color: bisque;</span></span><br><span class="line"><span class="regexp">    height: 40px;</span></span><br><span class="line"><span class="regexp">    line-height: 40px;</span></span><br><span class="line"><span class="regexp">    padding-left: 20px;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure></p><p>Home.vue<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;v-header&gt;&lt;/v-header&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"menu"</span>&gt;</span><br><span class="line">                &lt;v-menu&gt;&lt;/v-menu&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;router-view&gt;&lt;/</span>router-view&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">'./Header'</span></span><br><span class="line"><span class="keyword">import</span> Menu <span class="keyword">from</span> <span class="string">'./Menu'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        <span class="string">'v-header'</span>:Header,</span><br><span class="line">        <span class="string">'v-menu'</span>:Menu</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style scoped lang="scss"&gt;</span></span><br><span class="line"><span class="regexp">.menu&#123;</span></span><br><span class="line"><span class="regexp">    float: left;</span></span><br><span class="line"><span class="regexp">    height: 700px;</span></span><br><span class="line"><span class="regexp">    widows: 150px;</span></span><br><span class="line"><span class="regexp">    border: 1px solid brown;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">.content&#123;</span></span><br><span class="line"><span class="regexp">     float: left;</span></span><br><span class="line"><span class="regexp">    height: 750px;</span></span><br><span class="line"><span class="regexp">    border: 1px solid cornflowerblue;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure></p><p>Major.vue<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">        &lt;li v-<span class="keyword">for</span>=<span class="string">"(item,index) in list"</span> :key=<span class="string">"index"</span>&gt;</span><br><span class="line">          &#123;&#123;item.name&#125;&#125;</span><br><span class="line">        &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/u</span>l&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import axios from "axios";</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  props: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">         list: []</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">  components: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">  mounted() &#123;</span></span><br><span class="line"><span class="regexp">      const collegeId=this.$route.query.collegeId</span></span><br><span class="line"><span class="regexp">       const url = `http:/</span><span class="regexp">/39.98.205.17:9000/</span>api-task/major/findByCollegeId?collegeId=$&#123;collegeId&#125;<span class="string">`;</span></span><br><span class="line"><span class="string">        axios.get(url).then((response) =&gt; &#123;</span></span><br><span class="line"><span class="string">      this.list = response.data.data</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style scoped lang="scss"&gt;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure></p><p>Menu.vue<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/home/college"</span>&gt;大学管理&lt;<span class="regexp">/router-link&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/home/major"</span>&gt;专业管理&lt;<span class="regexp">/router-link&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props: &#123;&#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;&#125;,</span><br><span class="line">    components: &#123;&#125;,</span><br><span class="line">    mounted() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style scoped lang="scss"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure></p><p>根组件放置：<code>&lt;router-view&gt;&lt;/router-view&gt;</code></p><h1 id="父子组件传值"><a href="#父子组件传值" class="headerlink" title="父子组件传值"></a>父子组件传值</h1><p>1.父组件指定属性值，子组件使用<code>props</code>属性来接收。<br>（1）父组件中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;v-header title=<span class="string">"我是标题"</span>&gt;&lt;/v-header&gt;</span><br></pre></td></tr></table></figure></p><p>（2）子组件中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &#123;&#123;title&#125;&#125;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">props: [<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><p>2.子组件主动获取父组件的数据和方法：<br><code>this.$parent.数据</code><br><code>this.$parent.方法</code><br>3.父组件主动获取子组件数据和方法<br>（1）调用子组件的时候定义一个ref<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;v-header ref=<span class="string">'header'</span>&lt;<span class="regexp">/v-header&gt;</span></span><br></pre></td></tr></table></figure></p><p>（2）在父组件里面通过<br><code>this.$refs.header.属性</code><br><code>this.$refs.header.方法</code></p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p><img src="https://img-blog.csdnimg.cn/20190606092028809.png" alt="实例"><br>子组件中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"head"</span>&gt;</span><br><span class="line">        &#123;&#123;<span class="keyword">this</span>.$parent.title&#125;&#125;</span><br><span class="line">        &lt;!-- &#123;&#123;title&#125;&#125; --&gt;</span><br><span class="line">        &lt;button @click=<span class="string">"this.$parent.run"</span>&gt;调用父组件方法&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">    props: ['title'],</span></span><br><span class="line"><span class="regexp">    data() &#123;</span></span><br><span class="line"><span class="regexp">        return &#123;</span></span><br><span class="line"><span class="regexp">            msg:'这是组件的数据'</span></span><br><span class="line"><span class="regexp">        &#125;;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    methods: &#123;</span></span><br><span class="line"><span class="regexp">        fun()&#123;</span></span><br><span class="line"><span class="regexp">            alert('这是父组件的方法')</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    components: &#123;</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    mounted() &#123;&#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=<span class="string">"scss"</span>&gt;</span><br><span class="line">.head&#123;</span><br><span class="line">    background-color: bisque;</span><br><span class="line">    height: <span class="number">40</span>px;</span><br><span class="line">    line-height: <span class="number">40</span>px;</span><br><span class="line">    padding-left: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure></p><p>父组件中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=<span class="string">"run()"</span>&gt;调用子组件的数据和方法&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;v-header ref="header"&gt;&lt;/</span>v-header&gt;</span><br><span class="line">        &lt;!-- &lt;v-header title="电商管理系统V1.0"&gt;&lt;/v-header&gt; --&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"menu"</span>&gt;</span><br><span class="line">                &lt;v-menu&gt;&lt;/v-menu&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;router-view&gt;&lt;/</span>router-view&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">'./Header'</span></span><br><span class="line"><span class="keyword">import</span> Menu <span class="keyword">from</span> <span class="string">'./Menu'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            title:<span class="string">'电商管理系统V1.0'</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        run()&#123;</span><br><span class="line">            alert(<span class="keyword">this</span>.$refs.header.msg)</span><br><span class="line">            <span class="keyword">this</span>.$refs.header.fun()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        <span class="string">'v-header'</span>:Header,</span><br><span class="line">        <span class="string">'v-menu'</span>:Menu</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style scoped lang="scss"&gt;</span></span><br><span class="line"><span class="regexp">.menu&#123;</span></span><br><span class="line"><span class="regexp">    float: left;</span></span><br><span class="line"><span class="regexp">    height: 700px;</span></span><br><span class="line"><span class="regexp">    widows: 150px;</span></span><br><span class="line"><span class="regexp">    border: 1px solid brown;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">.content&#123;</span></span><br><span class="line"><span class="regexp">     float: left;</span></span><br><span class="line"><span class="regexp">    height: 750px;</span></span><br><span class="line"><span class="regexp">    border: 1px solid cornflowerblue;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/文章摘要图/chahua4.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://linjiaxiaozhang.com/categories/Vue/"/>
    
    
      <category term="学习" scheme="http://linjiaxiaozhang.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="基础" scheme="http://linjiaxiaozhang.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
